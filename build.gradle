plugins {
	id 'java'
	id 'org.springframework.boot' version '3.4.0'
	id 'io.spring.dependency-management' version '1.1.6'
}

group = 'com.pitanguinha'
version = '1.0.0-SNAPSHOT'

java {
	toolchain {
		languageVersion = JavaLanguageVersion.of(21)
	}
}

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
}

dependencies {
  // Spring Boot dependencies
	implementation 'org.springframework.boot:spring-boot-starter-data-mongodb-reactive'
	// implementation 'org.springframework.boot:spring-boot-starter-hateoas' {
    // exclude group: 'org.springframework.boot', module: 'spring-boot-starter-web'
  // }
	implementation 'org.springframework.boot:spring-boot-starter-validation'
	implementation 'org.springframework.boot:spring-boot-starter-webflux'
  implementation 'org.springframework.boot:spring-boot-starter-actuator'
  developmentOnly 'org.springframework.boot:spring-boot-devtools'
  // developmentOnly 'org.springframework.boot:spring-boot-docker-compose'
  testImplementation 'org.springframework.boot:spring-boot-starter-test'
  testImplementation 'org.springframework.boot:spring-boot-testcontainers'

  // Spring Documentation dependencies
  implementation 'org.springdoc:springdoc-openapi-starter-webflux-ui:2.8.5'

  // MapStruct dependencies
  implementation 'org.mapstruct:mapstruct:1.5.5.Final'
  annotationProcessor 'org.mapstruct:mapstruct-processor:1.5.5.Final'

  // JWT dependencies
  implementation 'com.auth0:java-jwt:4.5.0' 
  
  // AWS SDK dependencies
  implementation platform('software.amazon.awssdk:bom:2.31.16')
  implementation 'software.amazon.awssdk:s3'
  implementation 'software.amazon.awssdk:cloudfront'
  implementation 'software.amazon.awssdk:lambda'
  implementation 'software.amazon.awssdk:secretsmanager'

  // Lombok dependencies
  compileOnly 'org.projectlombok:lombok'
	annotationProcessor 'org.projectlombok:lombok'
	annotationProcessor 'org.projectlombok:lombok-mapstruct-binding:0.2.0'

  // Testing dependencies
	testImplementation 'io.projectreactor:reactor-test'
	testImplementation 'org.testcontainers:junit-jupiter'
	testImplementation 'org.testcontainers:mongodb'
  testImplementation 'org.mockito:mockito-inline:+'
	testRuntimeOnly 'org.junit.platform:junit-platform-launcher'
}

tasks.named('test') {
	useJUnitPlatform()
}

tasks.named('bootRun') {
  systemProperty 'spring.profiles.active', 'prod'
}

tasks.register('bootRunDev', org.springframework.boot.gradle.tasks.run.BootRun) {
  group = 'application'
  description = 'Runs the application with the development profile.'
  classpath = sourceSets.main.runtimeClasspath
  mainClass.set('com.pitanguinha.streaming.Application')
  systemProperty 'spring.profiles.active', 'dev'
}

task jarName {
  doFirst {
    def jarName = "${project.name}-${project.version}.jar"
    println jarName
  }
}
